name: Build and Upload Wheel

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      brew-package:
        required: false
        type: string
      apt-package:
        required: false
        type: string
        
    secrets:
      PYPI_API_TOKEN:
        required: true


jobs:
    ManyLinux_x86_64:
      runs-on: ubuntu-latest
      steps:
        - name: "Checkout repository"
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
            submodules: 'true'

        - name: Install brew packages
          run: |
            sudo apt-get update
            sudo apt-get install -y ${{ inputs.apt-package }}

        - name: "Build: Wheels"
          uses: pypa/cibuildwheel@v2.19.2
          with:
            output-dir: dist
          env:
            CC: "/usr/bin/gcc"
            CXX: "/usr/bin/g++"

        - name: "Upload: Wheel"
          uses: actions/upload-artifact@v4
          with:
            name: "manylinux_wheel_python"
            path: ./dist/*

    macos_x86_64:
      runs-on: macos-latest
      steps:
        - uses: maxim-lobanov/setup-xcode@v1
          with:
              xcode-version: '15.3'

        - name: Install brew packages
          run: |
            brew install ${{ inputs.brew-package }}

        - name: "Checkout repository"
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
            submodules: true

        - name: Setup GNU Fortran
          uses: fortran-lang/setup-fortran@v1
          id: setup-fortran

        - name: "Build: Wheels"
          uses: pypa/cibuildwheel@v2.20.0
          with:
            output-dir: dist
          env:
            FC: "/usr/local/bin/gfortran"
            CIBW_ENVIRONMENT_MACOS:
              MACOSX_DEPLOYMENT_TARGET=14.0
              PROJ_WHEEL=true
              PROJ_NETWORK=ON

        - name: "Upload: Wheel"
          uses: actions/upload-artifact@v4
          with:
            name: "macos_x86_64_wheel"
            path: ./dist/*

    Windows_x86_64:
      runs-on: windows-latest
      steps:
        - name: "Checkout repository "
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
            submodules: true

        - uses: msys2/setup-msys2@v2
          with:
            path-type: inherit
            msystem: MINGW64
            install: >-
                mingw-w64-x86_64-toolchain
                mingw-w64-x86_64-cmake
                mingw-w64-x86_64-openmp
                mingw-w64-x86_64-ninja
                mingw-w64-x86_64-gcc-fortran

        - uses: seanmiddleditch/gha-setup-ninja@master

        - name: "Build: Wheels"
          uses: pypa/cibuildwheel@v2.17.0
          with:
            output-dir: dist
          env:
            CMAKE_GENERATOR: Ninja
            CMAKE_MAKE_PROGRAM: ninja

        - name: "Upload: Wheel"
          uses: actions/upload-artifact@v4
          with:
            name: "windows_wheel_python"
            path: ./dist/*

    publish_wheel:
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        needs: [Windows_x86_64, ManyLinux_x86_64, macos_x86_64]
        runs-on: ubuntu-latest
        steps:
          - name: "Set-up: Python ${{ inputs.python-version }}"
            uses: actions/setup-python@v4
            with:
                python-version: "${{ inputs.python-version }}"

          - name: "Install: Dependencies"
            shell: bash
            run: |
                python -m pip install --upgrade pip
                python -m pip install twine

          - name: "Download: wheel"
            uses: actions/download-artifact@v4
            with:
                path: dist

          - name: "Publish: Wheel"
            uses: pypa/gh-action-pypi-publish@v1.5.1
            with:
                packages_dir: dist/*/
                user: __token__
                password: ${{ secrets.PYPI_API_TOKEN }}
                verbose: true
