name: "Compute test coverage"
description: "Interprets python version written with a dot to cp version"

inputs:
    gistID:
        required: true
    auth:
        required: true
    python-version:
        description: 'Python version for installation'
        required: true
    package-name:
        description: 'Name of the package to install'
        required: true

runs:
    using: "composite"
    steps:
      - uses: MartinPdeS/MPSActions/install_package_on_manylinux@master
        with:
          python-version: ${{ inputs.python-version }}
          package-name: ${{ inputs.package-name }}

      - name: "Chekcout requirements and files for testing"
        uses: actions/checkout@v4
        with:
            sparse-checkout: |
              tests
              requirements

      - name: "Computing total coverage"
        shell: bash
        run: |
            python -m pip install coverage pytest
            pytest --cov=${{ inputs.package-name }} --cov-report=html
            # coverage run --module pytest --verbose
            # cov_score=$(coverage report | awk '$1 == "TOTAL" {print $NF+0}')
            # echo "total=$cov_score" >> $GITHUB_ENV

      - name: Upload coverage.html to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./htmlcov

      # - name: "Upload: Coverage badge"
      #   uses: schneegans/dynamic-badges-action@v1.7.0
      #   with:
      #       auth: ${{ inputs.auth }}
      #       gistID: ${{ inputs.gistID }}
      #       filename: ${{ inputs.package-name }}_coverage_badge.json
      #       label: Coverage
      #       message: ${{ env.total }}%
      #       minColorRange: 50
      #       maxColorRange: 90
      #       valColorRange: ${{ env.total }}

      - name: Coverage comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}